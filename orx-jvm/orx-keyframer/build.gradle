plugins {
    id("org.openrndr.extra.convention.kotlin-jvm")
    id("antlr")
}

sourceSets {
    main {
        java {
            srcDir("build/generated-src/antlr")
        }
    }
}

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ["-visitor", "-long-messages"]
    outputDirectory = file("${project.buildDir}/generated-src/antlr/org/openrndr/extra/keyframer/antlr".toString())
}

dependencies {
    antlr(libs.antlr.core)
    implementation(libs.antlr.runtime)
    implementation(project(":orx-noise"))
    implementation(project(":orx-easing"))
    implementation(libs.openrndr.application)
    implementation(libs.openrndr.math)
    implementation(libs.gson)
    implementation(libs.kotlin.reflect)
    demoImplementation(project(":orx-camera"))
    demoImplementation(project(":orx-jvm:orx-panel"))
}

tasks.getByName("compileKotlin").dependsOn("generateGrammarSource")
tasks.getByName("compileTestKotlin").dependsOn("generateTestGrammarSource")